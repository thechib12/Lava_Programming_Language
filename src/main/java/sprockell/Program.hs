module Main where

import BasicFunctions
import HardwareTypes
import Sprockell
import System
import Simulation

prog0 :: [Instruction]
prog0 = [
          WriteInstr reg0 (DirAddr 13), 
          Load (ImmValue 1) regA, 
          Branch regA (Abs 16), 
          Load (ImmValue 1) regB, 
          Push regB, 
          Load (ImmValue 2) regC, 
          Push regC, 
          Push reg0, 
          Load (ImmValue 11) regD, 
          Push regD, 
          Jump (Abs 36), 
          Pop reg0, 
          Pop regD, 
          Pop reg0, 
          Pop reg0, 
          Jump (Abs 25), 
          Load (ImmValue 1) regE, 
          Push regE, 
          Push reg0, 
          Load (ImmValue 22) regF, 
          Push regF, 
          Jump (Abs 82), 
          Pop reg0, 
          Pop regF, 
          Pop reg0, 
          Nop, 
          Nop, 
          Push reg0, 
          Load (ImmValue 31) regG, 
          Push regG, 
          Jump (Abs 95), 
          Pop reg0, 
          Pop regG, 
          I2I regG regH, 
          Push regH, 
          EndProg, 
          Pop regI, 
          DecrSP, 
          Pop reg0, 
          Pop reg0, 
          Pop regJ, 
          DecrSP, 
          DecrSP, 
          DecrSP, 
          Pop reg0, 
          Pop reg0, 
          Pop reg0, 
          Pop regK, 
          DecrSP, 
          DecrSP, 
          DecrSP, 
          DecrSP, 
          Compute Equal regJ regK regL, 
          Branch regL (Abs 64), 
          Load (ImmValue 2) regM, 
          Pop reg0, 
          Pop reg0, 
          Pop reg0, 
          Pop reg0, 
          Push regM, 
          DecrSP, 
          DecrSP, 
          DecrSP, 
          Jump (Abs 38), 
          Nop, 
          Pop reg0, 
          Pop reg0, 
          Pop regN, 
          DecrSP, 
          DecrSP, 
          DecrSP, 
          Pop reg0, 
          Pop reg0, 
          Pop reg0, 
          Pop regO, 
          DecrSP, 
          DecrSP, 
          DecrSP, 
          DecrSP, 
          Compute Add regN regO regP, 
          WriteInstr regP (DirAddr 13), 
          Jump (Ind regI), 
          Pop regQ, 
          DecrSP, 
          ReadInstr  (DirAddr 13), 
          Receive regR, 
          Pop reg0, 
          Pop reg0, 
          Pop regS, 
          DecrSP, 
          DecrSP, 
          DecrSP, 
          Compute Sub regR regS regA1, 
          WriteInstr regA1 (DirAddr 13), 
          Jump (Ind regQ), 
          Pop regB1, 
          DecrSP, 
          ReadInstr  (DirAddr 13), 
          Receive regC1, 
          Pop regD1, 
          Pop reg0, 
          Push regC1, 
          Push reg0, 
          Jump (Ind regD1), 
          Jump (Ind regB1) 
       ] 
main = sysTest [prog0]