module Program where

import BasicFunctions
import HardwareTypes
import Sprockell
import System
import Simulation

prog0 :: [Instruction]
prog0 = [
          Store reg0 (DirAddr 1), 
          Load (ImmValue 2) regA, 
          Store regA (DirAddr 2), 
          Load (ImmValue 20) regB, 
          Push regB, 
          Load (ImmValue 10) regC, 
          Push regC, 
          Push reg0, 
          Load (ImmValue 11) regD, 
          Push regD, 
          Jump (Abs 19), 
          Pop reg0, 
          Pop regD, 
          Pop reg0, 
          Pop reg0, 
          Load (DirAddr 2) regE, 
          Compute Add regD regE regF, 
          Store regF (DirAddr 3), 
          EndProg, 
          Pop regG, 
          DecrSP, 
          Pop reg0, 
          Pop reg0, 
          Pop reg0, 
          Pop regH, 
          DecrSP, 
          DecrSP, 
          DecrSP, 
          DecrSP, 
          Load (ImmValue 2) regI, 
          Compute Add regH regI regJ, 
          Push regJ, 
          Push reg0, 
          Load (ImmValue 36) regK, 
          Push regK, 
          Jump (Abs 63), 
          Pop reg0, 
          Pop regK, 
          Pop reg0, 
          Pop reg0, 
          Pop reg0, 
          Pop regL, 
          DecrSP, 
          DecrSP, 
          DecrSP, 
          Load (ImmValue 3) regM, 
          Compute Add regL regM regN, 
          Push regN, 
          Push reg0, 
          Load (ImmValue 52) regO, 
          Push regO, 
          Jump (Abs 83), 
          Pop reg0, 
          Pop regO, 
          Pop reg0, 
          Compute Sub regK regO regP, 
          Compute Add regP reg0 regQ, 
          Pop regR, 
          Pop reg0, 
          Push regQ, 
          Push regR, 
          Jump (Ind regR), 
          Jump (Ind regG), 
          Pop regS, 
          DecrSP, 
          Load (ImmValue 3) regA1, 
          Store regA1 (DirAddr 2), 
          Load (ImmValue 7) regB1, 
          Store regB1 (DirAddr 3), 
          Load (ImmValue 4) regC1, 
          Store regC1 (DirAddr 4), 
          Pop reg0, 
          Pop reg0, 
          Pop regD1, 
          DecrSP, 
          DecrSP, 
          DecrSP, 
          Pop regE1, 
          Pop reg0, 
          Push regD1, 
          Push regE1, 
          Jump (Ind regE1), 
          Jump (Ind regS), 
          Pop regF1, 
          DecrSP, 
          Pop reg0, 
          Pop reg0, 
          Pop regG1, 
          DecrSP, 
          DecrSP, 
          DecrSP, 
          Pop regH1, 
          Pop reg0, 
          Push regG1, 
          Push regH1, 
          Jump (Ind regH1), 
          Jump (Ind regF1) 
       ] 
demoTest = sysTest [prog0]