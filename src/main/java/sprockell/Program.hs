module Program where

import BasicFunctions
import HardwareTypes
import Sprockell
import System
import Simulation

prog0 :: [Instruction]
prog0 = [
          Store reg0 (DirAddr 1), 
          Load (ImmValue 1) regA, 
          Load (ImmValue 1) regB, 
          Compute Sub regB regA regB, 
          Branch regB (Abs 18), 
          Load (ImmValue 1) regC, 
          Push regC, 
          Load (ImmValue 2) regD, 
          Push regD, 
          Push reg0, 
          Load (ImmValue 13) regE, 
          Push regE, 
          Jump (Abs 29), 
          Pop reg0, 
          Pop regE, 
          Pop reg0, 
          Pop reg0, 
          Jump (Abs 27), 
          Load (ImmValue 1) regF, 
          Push regF, 
          Push reg0, 
          Load (ImmValue 24) regG, 
          Push regG, 
          Jump (Abs 57), 
          Pop reg0, 
          Pop regG, 
          Pop reg0, 
          Nop, 
          EndProg, 
          Pop regH, 
          DecrSP, 
          Load (ImmValue 2) regI, 
          Pop reg0, 
          Pop reg0, 
          Pop reg0, 
          Pop reg0, 
          Push regI, 
          DecrSP, 
          DecrSP, 
          DecrSP, 
          Pop reg0, 
          Pop reg0, 
          Pop regJ, 
          DecrSP, 
          DecrSP, 
          DecrSP, 
          Pop reg0, 
          Pop reg0, 
          Pop reg0, 
          Pop regK, 
          DecrSP, 
          DecrSP, 
          DecrSP, 
          DecrSP, 
          Compute Add regJ regK regL, 
          Store regL (DirAddr 1), 
          Jump (Ind regH), 
          Pop regM, 
          DecrSP, 
          Load (DirAddr 1) regN, 
          Pop reg0, 
          Pop reg0, 
          Pop regO, 
          DecrSP, 
          DecrSP, 
          DecrSP, 
          Compute Sub regN regO regP, 
          Store regP (DirAddr 1), 
          Jump (Ind regM) 
       ] 
demoTest = sysTest [prog0]